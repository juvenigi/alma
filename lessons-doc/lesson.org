* Lesson #1 [2019-10-16 Mi]

** Code

*** TASK1: Print "Hello World"


*** TASK 2:
**** TASK2P1: summation function
     scan 2 values from user input -> x,y
     print the summation

**** TASK2P2: quotient
     calculate x / y (presumably division with doubles)

**** TASL2P3: precision
     precision(3)

*** TASK3:

**** TASK3P1: just implement whole division for positive integers only

**** TASK3P2: do the same but only using integer division and multiplication (redefine modulo)

**** TASK3P3: implement an algorithm for whole numbers (the rest is always positive)

*** TASK4:

**** TASK4P1: check if a number a power of two using modulo and division

**** TASK4P2: do the same but using bitwise AND (&) operator in one line only.

* Lesson #5 [2019-11-13 Mi]
** names
../src/quicksort.cpp
../src/mergesort.cpp
../src/mandelplot.cpp
** MANDELPLOT.CPP

*** concept

use ncurses to quickly display what you're going to render
have box select, move keys, zoom in-out (centered), squarify
some sort of coordinate system at the bottom end of the screen (perhaps even toggleable)
have a "render" key to render a pgm/png

create a 2d vector with the size of screen resolution, store mandelbrot values. 
this way we can speed up zooming in / moving screen because we don't need to recalculate everything (only shift values)
|-> correction: you can only save computing time when moving, it's kinda pointless to keep values saved for different zoom levels (but this could be a cool feature in the future)

while zooming in, however, it's perhaps unnecessary to keep the old values



|---+---|
|   |   |
|---+---|
|   |   |
|---+---|

